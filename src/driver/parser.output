Terminals unused in grammar

    ERROR


State 176 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompUnit Decl
    2         | CompUnit FuncDef
    3         | Decl
    4         | FuncDef

    5 Decl: ConstDecl
    6     | VarDecl

    7 ConstDecl: CONST BType ConstDefList ';'

    8 ConstDefList: ConstDef
    9             | ConstDefList ',' ConstDef

   10 ConstDef: IDENT ConstDefDimensionList '=' ConstInitVal

   11 ConstDefDimensionList: %empty
   12                      | ConstDefDimensionList '[' ConstExp ']'

   13 ConstInitVal: ConstExp
   14             | '{' ConstInitValList '}'
   15             | '{' '}'

   16 ConstInitValList: ConstInitValList ',' ConstInitVal
   17                 | ConstInitVal

   18 VarDecl: BType VarDefList ';'

   19 VarDefList: VarDef
   20           | VarDefList ',' VarDef

   21 VarDef: IDENT VarDefDimensionList '=' VarInitVal

   22 VarDefDimensionList: %empty
   23                    | VarDefDimensionList '[' VarExp ']'

   24 VarInitVal: VarExp
   25           | '{' VarInitValList '}'
   26           | '{' '}'

   27 VarInitValList: VarInitValList ',' VarInitVal
   28               | VarInitVal

   29 VarDef: IDENT VarDefDimensionList

   30 BType: INT
   31      | FLOAT
   32      | CHAR

   33 Block: '{' BlockItemList '}'

   34 BlockItemList: %empty
   35              | BlockItemList BlockItem

   36 BlockItem: Decl
   37          | Stmt

   38 Stmt: RETURN ExpChoice ';'
   39     | CONTINUE ';'
   40     | BREAK ';'
   41     | WHILE '(' Cond ')' Stmt
   42     | IF '(' Cond ')' Stmt ElseChoice
   43     | Block
   44     | ExpChoice ';'
   45     | LVal '=' Exp ';'

   46 ExpChoice: %empty
   47          | Exp

   48 Cond: LOrExp

   49 ElseChoice: %empty
   50           | ELSE Stmt

   51 Exp: AddExp

   52 LVal: IDENT IndexList
   53     | IDENT

   54 IndexList: '[' Exp ']'
   55          | IndexList '[' Exp ']'

   56 PrimaryExp: '(' LOrExp ')'
   57           | LVal
   58           | IntNumber
   59           | FloatNumber
   60           | character
   61           | String

   62 IntNumber: INT_CONST

   63 FloatNumber: FLOAT_CONST

   64 character: CHAR_CONST

   65 String: STRING_CONST

   66 UnaryExp: PrimaryExp
   67         | IDENT '(' FuncRParamList ')'
   68         | IDENT '(' ')'
   69         | UnaryOp UnaryExp

   70 FuncRParamList: Exp
   71               | FuncRParamList ',' Exp

   72 UnaryOp: '+'
   73        | '-'
   74        | '!'
   75        | '&'

   76 MulExp: UnaryExp
   77       | MulExp MulOp UnaryExp

   78 MulOp: '*'
   79      | '/'
   80      | '%'

   81 AddExp: MulExp
   82       | AddExp AddOp MulExp

   83 AddOp: '+'
   84      | '-'

   85 RelExp: RelExp RelOp AddExp
   86       | AddExp

   87 RelOp: '<'
   88      | '>'
   89      | LEEQ
   90      | GEEQ

   91 EqExp: RelExp
   92      | EqExp EqOp RelExp

   93 EqOp: EQ
   94     | UNEQ

   95 LAndExp: EqExp
   96        | LAndExp LAndOp EqExp

   97 LAndOp: AND

   98 LOrExp: LAndExp
   99       | LOrExp LOrOp LAndExp

  100 LOrOp: OR

  101 ConstExp: AddExp

  102 VarExp: AddExp

  103 FuncDef: DEF FuncType IDENT '(' FuncFParamList ')' Block
  104        | DEF FuncType IDENT '(' ')' Block

  105 FuncFParamList: FuncFParam
  106               | FuncFParamList ',' FuncFParam

  107 FuncFParam: BType IDENT
  108           | BType IDENT '[' ']' FuncFParamIndexList

  109 FuncFParamIndexList: %empty
  110                    | FuncFParamIndexList '[' Exp ']'

  111 FuncType: VOID
  112         | INT
  113         | FLOAT
  114         | CHAR


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 74
    '%' (37) 80
    '&' (38) 75
    '(' (40) 41 42 56 67 68 103 104
    ')' (41) 41 42 56 67 68 103 104
    '*' (42) 78
    '+' (43) 72 83
    ',' (44) 9 16 20 27 71 106
    '-' (45) 73 84
    '/' (47) 79
    ';' (59) 7 18 38 39 40 44 45
    '<' (60) 87
    '=' (61) 10 21 45
    '>' (62) 88
    '[' (91) 12 23 54 55 108 110
    ']' (93) 12 23 54 55 108 110
    '{' (123) 14 15 25 26 33
    '}' (125) 14 15 25 26 33
    error (256)
    CONST (258) 7
    INT (259) 30 112
    FLOAT (260) 31 113
    CHAR (261) 32 114
    VOID (262) 111
    IF (263) 42
    ELSE (264) 50
    WHILE (265) 41
    BREAK (266) 40
    CONTINUE (267) 39
    RETURN (268) 38
    DEF (269) 103 104
    IDENT (270) 10 21 29 52 53 67 68 103 104 107 108
    INT_CONST (271) 62
    FLOAT_CONST (272) 63
    CHAR_CONST (273) 64
    STRING_CONST (274) 65
    LEEQ (275) 89
    GEEQ (276) 90
    EQ (277) 93
    UNEQ (278) 94
    AND (279) 97
    OR (280) 100
    ERROR (281)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    CompUnit (46)
        on left: 1 2 3 4
        on right: 0 1 2
    Decl (47)
        on left: 5 6
        on right: 1 3 36
    ConstDecl (48)
        on left: 7
        on right: 5
    ConstDefList (49)
        on left: 8 9
        on right: 7 9
    ConstDef (50)
        on left: 10
        on right: 8 9
    ConstDefDimensionList (51)
        on left: 11 12
        on right: 10 12
    ConstInitVal (52)
        on left: 13 14 15
        on right: 10 16 17
    ConstInitValList (53)
        on left: 16 17
        on right: 14 16
    VarDecl (54)
        on left: 18
        on right: 6
    VarDefList (55)
        on left: 19 20
        on right: 18 20
    VarDef (56)
        on left: 21 29
        on right: 19 20
    VarDefDimensionList (57)
        on left: 22 23
        on right: 21 23 29
    VarInitVal (58)
        on left: 24 25 26
        on right: 21 27 28
    VarInitValList (59)
        on left: 27 28
        on right: 25 27
    BType (60)
        on left: 30 31 32
        on right: 7 18 107 108
    Block (61)
        on left: 33
        on right: 43 103 104
    BlockItemList (62)
        on left: 34 35
        on right: 33 35
    BlockItem (63)
        on left: 36 37
        on right: 35
    Stmt (64)
        on left: 38 39 40 41 42 43 44 45
        on right: 37 41 42 50
    ExpChoice (65)
        on left: 46 47
        on right: 38 44
    Cond (66)
        on left: 48
        on right: 41 42
    ElseChoice (67)
        on left: 49 50
        on right: 42
    Exp (68)
        on left: 51
        on right: 45 47 54 55 70 71 110
    LVal (69)
        on left: 52 53
        on right: 45 57
    IndexList (70)
        on left: 54 55
        on right: 52 55
    PrimaryExp (71)
        on left: 56 57 58 59 60 61
        on right: 66
    IntNumber (72)
        on left: 62
        on right: 58
    FloatNumber (73)
        on left: 63
        on right: 59
    character (74)
        on left: 64
        on right: 60
    String (75)
        on left: 65
        on right: 61
    UnaryExp (76)
        on left: 66 67 68 69
        on right: 69 76 77
    FuncRParamList (77)
        on left: 70 71
        on right: 67 71
    UnaryOp (78)
        on left: 72 73 74 75
        on right: 69
    MulExp (79)
        on left: 76 77
        on right: 77 81 82
    MulOp (80)
        on left: 78 79 80
        on right: 77
    AddExp (81)
        on left: 81 82
        on right: 51 82 85 86 101 102
    AddOp (82)
        on left: 83 84
        on right: 82
    RelExp (83)
        on left: 85 86
        on right: 85 91 92
    RelOp (84)
        on left: 87 88 89 90
        on right: 85
    EqExp (85)
        on left: 91 92
        on right: 92 95 96
    EqOp (86)
        on left: 93 94
        on right: 92
    LAndExp (87)
        on left: 95 96
        on right: 96 98 99
    LAndOp (88)
        on left: 97
        on right: 96
    LOrExp (89)
        on left: 98 99
        on right: 48 56 99
    LOrOp (90)
        on left: 100
        on right: 99
    ConstExp (91)
        on left: 101
        on right: 12 13
    VarExp (92)
        on left: 102
        on right: 23 24
    FuncDef (93)
        on left: 103 104
        on right: 2 4
    FuncFParamList (94)
        on left: 105 106
        on right: 103 106
    FuncFParam (95)
        on left: 107 108
        on right: 105 106
    FuncFParamIndexList (96)
        on left: 109 110
        on right: 108 110
    FuncType (97)
        on left: 111 112 113 114
        on right: 103 104


State 0

    0 $accept: . CompUnit $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    DEF    shift, and go to state 5

    CompUnit   go to state 6
    Decl       go to state 7
    ConstDecl  go to state 8
    VarDecl    go to state 9
    BType      go to state 10
    FuncDef    go to state 11


State 1

    7 ConstDecl: CONST . BType ConstDefList ';'

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    BType  go to state 12


State 2

   30 BType: INT .

    $default  reduce using rule 30 (BType)


State 3

   31 BType: FLOAT .

    $default  reduce using rule 31 (BType)


State 4

   32 BType: CHAR .

    $default  reduce using rule 32 (BType)


State 5

  103 FuncDef: DEF . FuncType IDENT '(' FuncFParamList ')' Block
  104        | DEF . FuncType IDENT '(' ')' Block

    INT    shift, and go to state 13
    FLOAT  shift, and go to state 14
    CHAR   shift, and go to state 15
    VOID   shift, and go to state 16

    FuncType  go to state 17


State 6

    0 $accept: CompUnit . $end
    1 CompUnit: CompUnit . Decl
    2         | CompUnit . FuncDef

    $end   shift, and go to state 18
    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    DEF    shift, and go to state 5

    Decl       go to state 19
    ConstDecl  go to state 8
    VarDecl    go to state 9
    BType      go to state 10
    FuncDef    go to state 20


State 7

    3 CompUnit: Decl .

    $default  reduce using rule 3 (CompUnit)


State 8

    5 Decl: ConstDecl .

    $default  reduce using rule 5 (Decl)


State 9

    6 Decl: VarDecl .

    $default  reduce using rule 6 (Decl)


State 10

   18 VarDecl: BType . VarDefList ';'

    IDENT  shift, and go to state 21

    VarDefList  go to state 22
    VarDef      go to state 23


State 11

    4 CompUnit: FuncDef .

    $default  reduce using rule 4 (CompUnit)


State 12

    7 ConstDecl: CONST BType . ConstDefList ';'

    IDENT  shift, and go to state 24

    ConstDefList  go to state 25
    ConstDef      go to state 26


State 13

  112 FuncType: INT .

    $default  reduce using rule 112 (FuncType)


State 14

  113 FuncType: FLOAT .

    $default  reduce using rule 113 (FuncType)


State 15

  114 FuncType: CHAR .

    $default  reduce using rule 114 (FuncType)


State 16

  111 FuncType: VOID .

    $default  reduce using rule 111 (FuncType)


State 17

  103 FuncDef: DEF FuncType . IDENT '(' FuncFParamList ')' Block
  104        | DEF FuncType . IDENT '(' ')' Block

    IDENT  shift, and go to state 27


State 18

    0 $accept: CompUnit $end .

    $default  accept


State 19

    1 CompUnit: CompUnit Decl .

    $default  reduce using rule 1 (CompUnit)


State 20

    2 CompUnit: CompUnit FuncDef .

    $default  reduce using rule 2 (CompUnit)


State 21

   21 VarDef: IDENT . VarDefDimensionList '=' VarInitVal
   29       | IDENT . VarDefDimensionList

    $default  reduce using rule 22 (VarDefDimensionList)

    VarDefDimensionList  go to state 28


State 22

   18 VarDecl: BType VarDefList . ';'
   20 VarDefList: VarDefList . ',' VarDef

    ';'  shift, and go to state 29
    ','  shift, and go to state 30


State 23

   19 VarDefList: VarDef .

    $default  reduce using rule 19 (VarDefList)


State 24

   10 ConstDef: IDENT . ConstDefDimensionList '=' ConstInitVal

    $default  reduce using rule 11 (ConstDefDimensionList)

    ConstDefDimensionList  go to state 31


State 25

    7 ConstDecl: CONST BType ConstDefList . ';'
    9 ConstDefList: ConstDefList . ',' ConstDef

    ';'  shift, and go to state 32
    ','  shift, and go to state 33


State 26

    8 ConstDefList: ConstDef .

    $default  reduce using rule 8 (ConstDefList)


State 27

  103 FuncDef: DEF FuncType IDENT . '(' FuncFParamList ')' Block
  104        | DEF FuncType IDENT . '(' ')' Block

    '('  shift, and go to state 34


State 28

   21 VarDef: IDENT VarDefDimensionList . '=' VarInitVal
   23 VarDefDimensionList: VarDefDimensionList . '[' VarExp ']'
   29 VarDef: IDENT VarDefDimensionList .

    '='  shift, and go to state 35
    '['  shift, and go to state 36

    $default  reduce using rule 29 (VarDef)


State 29

   18 VarDecl: BType VarDefList ';' .

    $default  reduce using rule 18 (VarDecl)


State 30

   20 VarDefList: VarDefList ',' . VarDef

    IDENT  shift, and go to state 21

    VarDef  go to state 37


State 31

   10 ConstDef: IDENT ConstDefDimensionList . '=' ConstInitVal
   12 ConstDefDimensionList: ConstDefDimensionList . '[' ConstExp ']'

    '='  shift, and go to state 38
    '['  shift, and go to state 39


State 32

    7 ConstDecl: CONST BType ConstDefList ';' .

    $default  reduce using rule 7 (ConstDecl)


State 33

    9 ConstDefList: ConstDefList ',' . ConstDef

    IDENT  shift, and go to state 24

    ConstDef  go to state 40


State 34

  103 FuncDef: DEF FuncType IDENT '(' . FuncFParamList ')' Block
  104        | DEF FuncType IDENT '(' . ')' Block

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    ')'    shift, and go to state 41

    BType           go to state 42
    FuncFParamList  go to state 43
    FuncFParam      go to state 44


State 35

   21 VarDef: IDENT VarDefDimensionList '=' . VarInitVal

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 50
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    VarInitVal   go to state 56
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 66
    VarExp       go to state 67


State 36

   23 VarDefDimensionList: VarDefDimensionList '[' . VarExp ']'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 66
    VarExp       go to state 68


State 37

   20 VarDefList: VarDefList ',' VarDef .

    $default  reduce using rule 20 (VarDefList)


State 38

   10 ConstDef: IDENT ConstDefDimensionList '=' . ConstInitVal

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 69
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    ConstInitVal  go to state 70
    LVal          go to state 57
    PrimaryExp    go to state 58
    IntNumber     go to state 59
    FloatNumber   go to state 60
    character     go to state 61
    String        go to state 62
    UnaryExp      go to state 63
    UnaryOp       go to state 64
    MulExp        go to state 65
    AddExp        go to state 71
    ConstExp      go to state 72


State 39

   12 ConstDefDimensionList: ConstDefDimensionList '[' . ConstExp ']'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 71
    ConstExp     go to state 73


State 40

    9 ConstDefList: ConstDefList ',' ConstDef .

    $default  reduce using rule 9 (ConstDefList)


State 41

  104 FuncDef: DEF FuncType IDENT '(' ')' . Block

    '{'  shift, and go to state 74

    Block  go to state 75


State 42

  107 FuncFParam: BType . IDENT
  108           | BType . IDENT '[' ']' FuncFParamIndexList

    IDENT  shift, and go to state 76


State 43

  103 FuncDef: DEF FuncType IDENT '(' FuncFParamList . ')' Block
  106 FuncFParamList: FuncFParamList . ',' FuncFParam

    ','  shift, and go to state 77
    ')'  shift, and go to state 78


State 44

  105 FuncFParamList: FuncFParam .

    $default  reduce using rule 105 (FuncFParamList)


State 45

   52 LVal: IDENT . IndexList
   53     | IDENT .
   67 UnaryExp: IDENT . '(' FuncRParamList ')'
   68         | IDENT . '(' ')'

    '['  shift, and go to state 79
    '('  shift, and go to state 80

    $default  reduce using rule 53 (LVal)

    IndexList  go to state 81


State 46

   62 IntNumber: INT_CONST .

    $default  reduce using rule 62 (IntNumber)


State 47

   63 FloatNumber: FLOAT_CONST .

    $default  reduce using rule 63 (FloatNumber)


State 48

   64 character: CHAR_CONST .

    $default  reduce using rule 64 (character)


State 49

   65 String: STRING_CONST .

    $default  reduce using rule 65 (String)


State 50

   25 VarInitVal: '{' . VarInitValList '}'
   26           | '{' . '}'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 50
    '}'           shift, and go to state 82
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    VarInitVal      go to state 83
    VarInitValList  go to state 84
    LVal            go to state 57
    PrimaryExp      go to state 58
    IntNumber       go to state 59
    FloatNumber     go to state 60
    character       go to state 61
    String          go to state 62
    UnaryExp        go to state 63
    UnaryOp         go to state 64
    MulExp          go to state 65
    AddExp          go to state 66
    VarExp          go to state 67


State 51

   56 PrimaryExp: '(' . LOrExp ')'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 85
    RelExp       go to state 86
    EqExp        go to state 87
    LAndExp      go to state 88
    LOrExp       go to state 89


State 52

   72 UnaryOp: '+' .

    $default  reduce using rule 72 (UnaryOp)


State 53

   73 UnaryOp: '-' .

    $default  reduce using rule 73 (UnaryOp)


State 54

   74 UnaryOp: '!' .

    $default  reduce using rule 74 (UnaryOp)


State 55

   75 UnaryOp: '&' .

    $default  reduce using rule 75 (UnaryOp)


State 56

   21 VarDef: IDENT VarDefDimensionList '=' VarInitVal .

    $default  reduce using rule 21 (VarDef)


State 57

   57 PrimaryExp: LVal .

    $default  reduce using rule 57 (PrimaryExp)


State 58

   66 UnaryExp: PrimaryExp .

    $default  reduce using rule 66 (UnaryExp)


State 59

   58 PrimaryExp: IntNumber .

    $default  reduce using rule 58 (PrimaryExp)


State 60

   59 PrimaryExp: FloatNumber .

    $default  reduce using rule 59 (PrimaryExp)


State 61

   60 PrimaryExp: character .

    $default  reduce using rule 60 (PrimaryExp)


State 62

   61 PrimaryExp: String .

    $default  reduce using rule 61 (PrimaryExp)


State 63

   76 MulExp: UnaryExp .

    $default  reduce using rule 76 (MulExp)


State 64

   69 UnaryExp: UnaryOp . UnaryExp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 90
    UnaryOp      go to state 64


State 65

   77 MulExp: MulExp . MulOp UnaryExp
   81 AddExp: MulExp .

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92
    '%'  shift, and go to state 93

    $default  reduce using rule 81 (AddExp)

    MulOp  go to state 94


State 66

   82 AddExp: AddExp . AddOp MulExp
  102 VarExp: AddExp .

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 102 (VarExp)

    AddOp  go to state 97


State 67

   24 VarInitVal: VarExp .

    $default  reduce using rule 24 (VarInitVal)


State 68

   23 VarDefDimensionList: VarDefDimensionList '[' VarExp . ']'

    ']'  shift, and go to state 98


State 69

   14 ConstInitVal: '{' . ConstInitValList '}'
   15             | '{' . '}'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 69
    '}'           shift, and go to state 99
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    ConstInitVal      go to state 100
    ConstInitValList  go to state 101
    LVal              go to state 57
    PrimaryExp        go to state 58
    IntNumber         go to state 59
    FloatNumber       go to state 60
    character         go to state 61
    String            go to state 62
    UnaryExp          go to state 63
    UnaryOp           go to state 64
    MulExp            go to state 65
    AddExp            go to state 71
    ConstExp          go to state 72


State 70

   10 ConstDef: IDENT ConstDefDimensionList '=' ConstInitVal .

    $default  reduce using rule 10 (ConstDef)


State 71

   82 AddExp: AddExp . AddOp MulExp
  101 ConstExp: AddExp .

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 101 (ConstExp)

    AddOp  go to state 97


State 72

   13 ConstInitVal: ConstExp .

    $default  reduce using rule 13 (ConstInitVal)


State 73

   12 ConstDefDimensionList: ConstDefDimensionList '[' ConstExp . ']'

    ']'  shift, and go to state 102


State 74

   33 Block: '{' . BlockItemList '}'

    $default  reduce using rule 34 (BlockItemList)

    BlockItemList  go to state 103


State 75

  104 FuncDef: DEF FuncType IDENT '(' ')' Block .

    $default  reduce using rule 104 (FuncDef)


State 76

  107 FuncFParam: BType IDENT .
  108           | BType IDENT . '[' ']' FuncFParamIndexList

    '['  shift, and go to state 104

    $default  reduce using rule 107 (FuncFParam)


State 77

  106 FuncFParamList: FuncFParamList ',' . FuncFParam

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    BType       go to state 42
    FuncFParam  go to state 105


State 78

  103 FuncDef: DEF FuncType IDENT '(' FuncFParamList ')' . Block

    '{'  shift, and go to state 74

    Block  go to state 106


State 79

   54 IndexList: '[' . Exp ']'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Exp          go to state 107
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 80

   67 UnaryExp: IDENT '(' . FuncRParamList ')'
   68         | IDENT '(' . ')'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    ')'           shift, and go to state 109
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Exp             go to state 110
    LVal            go to state 57
    PrimaryExp      go to state 58
    IntNumber       go to state 59
    FloatNumber     go to state 60
    character       go to state 61
    String          go to state 62
    UnaryExp        go to state 63
    FuncRParamList  go to state 111
    UnaryOp         go to state 64
    MulExp          go to state 65
    AddExp          go to state 108


State 81

   52 LVal: IDENT IndexList .
   55 IndexList: IndexList . '[' Exp ']'

    '['  shift, and go to state 112

    $default  reduce using rule 52 (LVal)


State 82

   26 VarInitVal: '{' '}' .

    $default  reduce using rule 26 (VarInitVal)


State 83

   28 VarInitValList: VarInitVal .

    $default  reduce using rule 28 (VarInitValList)


State 84

   25 VarInitVal: '{' VarInitValList . '}'
   27 VarInitValList: VarInitValList . ',' VarInitVal

    ','  shift, and go to state 113
    '}'  shift, and go to state 114


State 85

   82 AddExp: AddExp . AddOp MulExp
   86 RelExp: AddExp .

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 86 (RelExp)

    AddOp  go to state 97


State 86

   85 RelExp: RelExp . RelOp AddExp
   91 EqExp: RelExp .

    LEEQ  shift, and go to state 115
    GEEQ  shift, and go to state 116
    '<'   shift, and go to state 117
    '>'   shift, and go to state 118

    $default  reduce using rule 91 (EqExp)

    RelOp  go to state 119


State 87

   92 EqExp: EqExp . EqOp RelExp
   95 LAndExp: EqExp .

    EQ    shift, and go to state 120
    UNEQ  shift, and go to state 121

    $default  reduce using rule 95 (LAndExp)

    EqOp  go to state 122


State 88

   96 LAndExp: LAndExp . LAndOp EqExp
   98 LOrExp: LAndExp .

    AND  shift, and go to state 123

    $default  reduce using rule 98 (LOrExp)

    LAndOp  go to state 124


State 89

   56 PrimaryExp: '(' LOrExp . ')'
   99 LOrExp: LOrExp . LOrOp LAndExp

    OR   shift, and go to state 125
    ')'  shift, and go to state 126

    LOrOp  go to state 127


State 90

   69 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 69 (UnaryExp)


State 91

   78 MulOp: '*' .

    $default  reduce using rule 78 (MulOp)


State 92

   79 MulOp: '/' .

    $default  reduce using rule 79 (MulOp)


State 93

   80 MulOp: '%' .

    $default  reduce using rule 80 (MulOp)


State 94

   77 MulExp: MulExp MulOp . UnaryExp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 128
    UnaryOp      go to state 64


State 95

   83 AddOp: '+' .

    $default  reduce using rule 83 (AddOp)


State 96

   84 AddOp: '-' .

    $default  reduce using rule 84 (AddOp)


State 97

   82 AddExp: AddExp AddOp . MulExp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 129


State 98

   23 VarDefDimensionList: VarDefDimensionList '[' VarExp ']' .

    $default  reduce using rule 23 (VarDefDimensionList)


State 99

   15 ConstInitVal: '{' '}' .

    $default  reduce using rule 15 (ConstInitVal)


State 100

   17 ConstInitValList: ConstInitVal .

    $default  reduce using rule 17 (ConstInitValList)


State 101

   14 ConstInitVal: '{' ConstInitValList . '}'
   16 ConstInitValList: ConstInitValList . ',' ConstInitVal

    ','  shift, and go to state 130
    '}'  shift, and go to state 131


State 102

   12 ConstDefDimensionList: ConstDefDimensionList '[' ConstExp ']' .

    $default  reduce using rule 12 (ConstDefDimensionList)


State 103

   33 Block: '{' BlockItemList . '}'
   35 BlockItemList: BlockItemList . BlockItem

    CONST         shift, and go to state 1
    INT           shift, and go to state 2
    FLOAT         shift, and go to state 3
    CHAR          shift, and go to state 4
    IF            shift, and go to state 132
    WHILE         shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 74
    '}'           shift, and go to state 137
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 46 (ExpChoice)

    Decl         go to state 138
    ConstDecl    go to state 8
    VarDecl      go to state 9
    BType        go to state 10
    Block        go to state 139
    BlockItem    go to state 140
    Stmt         go to state 141
    ExpChoice    go to state 142
    Exp          go to state 143
    LVal         go to state 144
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 104

  108 FuncFParam: BType IDENT '[' . ']' FuncFParamIndexList

    ']'  shift, and go to state 145


State 105

  106 FuncFParamList: FuncFParamList ',' FuncFParam .

    $default  reduce using rule 106 (FuncFParamList)


State 106

  103 FuncDef: DEF FuncType IDENT '(' FuncFParamList ')' Block .

    $default  reduce using rule 103 (FuncDef)


State 107

   54 IndexList: '[' Exp . ']'

    ']'  shift, and go to state 146


State 108

   51 Exp: AddExp .
   82 AddExp: AddExp . AddOp MulExp

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 51 (Exp)

    AddOp  go to state 97


State 109

   68 UnaryExp: IDENT '(' ')' .

    $default  reduce using rule 68 (UnaryExp)


State 110

   70 FuncRParamList: Exp .

    $default  reduce using rule 70 (FuncRParamList)


State 111

   67 UnaryExp: IDENT '(' FuncRParamList . ')'
   71 FuncRParamList: FuncRParamList . ',' Exp

    ','  shift, and go to state 147
    ')'  shift, and go to state 148


State 112

   55 IndexList: IndexList '[' . Exp ']'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Exp          go to state 149
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 113

   27 VarInitValList: VarInitValList ',' . VarInitVal

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 50
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    VarInitVal   go to state 150
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 66
    VarExp       go to state 67


State 114

   25 VarInitVal: '{' VarInitValList '}' .

    $default  reduce using rule 25 (VarInitVal)


State 115

   89 RelOp: LEEQ .

    $default  reduce using rule 89 (RelOp)


State 116

   90 RelOp: GEEQ .

    $default  reduce using rule 90 (RelOp)


State 117

   87 RelOp: '<' .

    $default  reduce using rule 87 (RelOp)


State 118

   88 RelOp: '>' .

    $default  reduce using rule 88 (RelOp)


State 119

   85 RelExp: RelExp RelOp . AddExp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 151


State 120

   93 EqOp: EQ .

    $default  reduce using rule 93 (EqOp)


State 121

   94 EqOp: UNEQ .

    $default  reduce using rule 94 (EqOp)


State 122

   92 EqExp: EqExp EqOp . RelExp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 85
    RelExp       go to state 152


State 123

   97 LAndOp: AND .

    $default  reduce using rule 97 (LAndOp)


State 124

   96 LAndExp: LAndExp LAndOp . EqExp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 85
    RelExp       go to state 86
    EqExp        go to state 153


State 125

  100 LOrOp: OR .

    $default  reduce using rule 100 (LOrOp)


State 126

   56 PrimaryExp: '(' LOrExp ')' .

    $default  reduce using rule 56 (PrimaryExp)


State 127

   99 LOrExp: LOrExp LOrOp . LAndExp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 85
    RelExp       go to state 86
    EqExp        go to state 87
    LAndExp      go to state 154


State 128

   77 MulExp: MulExp MulOp UnaryExp .

    $default  reduce using rule 77 (MulExp)


State 129

   77 MulExp: MulExp . MulOp UnaryExp
   82 AddExp: AddExp AddOp MulExp .

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92
    '%'  shift, and go to state 93

    $default  reduce using rule 82 (AddExp)

    MulOp  go to state 94


State 130

   16 ConstInitValList: ConstInitValList ',' . ConstInitVal

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 69
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    ConstInitVal  go to state 155
    LVal          go to state 57
    PrimaryExp    go to state 58
    IntNumber     go to state 59
    FloatNumber   go to state 60
    character     go to state 61
    String        go to state 62
    UnaryExp      go to state 63
    UnaryOp       go to state 64
    MulExp        go to state 65
    AddExp        go to state 71
    ConstExp      go to state 72


State 131

   14 ConstInitVal: '{' ConstInitValList '}' .

    $default  reduce using rule 14 (ConstInitVal)


State 132

   42 Stmt: IF . '(' Cond ')' Stmt ElseChoice

    '('  shift, and go to state 156


State 133

   41 Stmt: WHILE . '(' Cond ')' Stmt

    '('  shift, and go to state 157


State 134

   40 Stmt: BREAK . ';'

    ';'  shift, and go to state 158


State 135

   39 Stmt: CONTINUE . ';'

    ';'  shift, and go to state 159


State 136

   38 Stmt: RETURN . ExpChoice ';'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 46 (ExpChoice)

    ExpChoice    go to state 160
    Exp          go to state 143
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 137

   33 Block: '{' BlockItemList '}' .

    $default  reduce using rule 33 (Block)


State 138

   36 BlockItem: Decl .

    $default  reduce using rule 36 (BlockItem)


State 139

   43 Stmt: Block .

    $default  reduce using rule 43 (Stmt)


State 140

   35 BlockItemList: BlockItemList BlockItem .

    $default  reduce using rule 35 (BlockItemList)


State 141

   37 BlockItem: Stmt .

    $default  reduce using rule 37 (BlockItem)


State 142

   44 Stmt: ExpChoice . ';'

    ';'  shift, and go to state 161


State 143

   47 ExpChoice: Exp .

    $default  reduce using rule 47 (ExpChoice)


State 144

   45 Stmt: LVal . '=' Exp ';'
   57 PrimaryExp: LVal .

    '='  shift, and go to state 162

    $default  reduce using rule 57 (PrimaryExp)


State 145

  108 FuncFParam: BType IDENT '[' ']' . FuncFParamIndexList

    $default  reduce using rule 109 (FuncFParamIndexList)

    FuncFParamIndexList  go to state 163


State 146

   54 IndexList: '[' Exp ']' .

    $default  reduce using rule 54 (IndexList)


State 147

   71 FuncRParamList: FuncRParamList ',' . Exp

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Exp          go to state 164
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 148

   67 UnaryExp: IDENT '(' FuncRParamList ')' .

    $default  reduce using rule 67 (UnaryExp)


State 149

   55 IndexList: IndexList '[' Exp . ']'

    ']'  shift, and go to state 165


State 150

   27 VarInitValList: VarInitValList ',' VarInitVal .

    $default  reduce using rule 27 (VarInitValList)


State 151

   82 AddExp: AddExp . AddOp MulExp
   85 RelExp: RelExp RelOp AddExp .

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96

    $default  reduce using rule 85 (RelExp)

    AddOp  go to state 97


State 152

   85 RelExp: RelExp . RelOp AddExp
   92 EqExp: EqExp EqOp RelExp .

    LEEQ  shift, and go to state 115
    GEEQ  shift, and go to state 116
    '<'   shift, and go to state 117
    '>'   shift, and go to state 118

    $default  reduce using rule 92 (EqExp)

    RelOp  go to state 119


State 153

   92 EqExp: EqExp . EqOp RelExp
   96 LAndExp: LAndExp LAndOp EqExp .

    EQ    shift, and go to state 120
    UNEQ  shift, and go to state 121

    $default  reduce using rule 96 (LAndExp)

    EqOp  go to state 122


State 154

   96 LAndExp: LAndExp . LAndOp EqExp
   99 LOrExp: LOrExp LOrOp LAndExp .

    AND  shift, and go to state 123

    $default  reduce using rule 99 (LOrExp)

    LAndOp  go to state 124


State 155

   16 ConstInitValList: ConstInitValList ',' ConstInitVal .

    $default  reduce using rule 16 (ConstInitValList)


State 156

   42 Stmt: IF '(' . Cond ')' Stmt ElseChoice

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Cond         go to state 166
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 85
    RelExp       go to state 86
    EqExp        go to state 87
    LAndExp      go to state 88
    LOrExp       go to state 167


State 157

   41 Stmt: WHILE '(' . Cond ')' Stmt

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Cond         go to state 168
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 85
    RelExp       go to state 86
    EqExp        go to state 87
    LAndExp      go to state 88
    LOrExp       go to state 167


State 158

   40 Stmt: BREAK ';' .

    $default  reduce using rule 40 (Stmt)


State 159

   39 Stmt: CONTINUE ';' .

    $default  reduce using rule 39 (Stmt)


State 160

   38 Stmt: RETURN ExpChoice . ';'

    ';'  shift, and go to state 169


State 161

   44 Stmt: ExpChoice ';' .

    $default  reduce using rule 44 (Stmt)


State 162

   45 Stmt: LVal '=' . Exp ';'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Exp          go to state 170
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 163

  108 FuncFParam: BType IDENT '[' ']' FuncFParamIndexList .
  110 FuncFParamIndexList: FuncFParamIndexList . '[' Exp ']'

    '['  shift, and go to state 171

    $default  reduce using rule 108 (FuncFParam)


State 164

   71 FuncRParamList: FuncRParamList ',' Exp .

    $default  reduce using rule 71 (FuncRParamList)


State 165

   55 IndexList: IndexList '[' Exp ']' .

    $default  reduce using rule 55 (IndexList)


State 166

   42 Stmt: IF '(' Cond . ')' Stmt ElseChoice

    ')'  shift, and go to state 172


State 167

   48 Cond: LOrExp .
   99 LOrExp: LOrExp . LOrOp LAndExp

    OR  shift, and go to state 125

    $default  reduce using rule 48 (Cond)

    LOrOp  go to state 127


State 168

   41 Stmt: WHILE '(' Cond . ')' Stmt

    ')'  shift, and go to state 173


State 169

   38 Stmt: RETURN ExpChoice ';' .

    $default  reduce using rule 38 (Stmt)


State 170

   45 Stmt: LVal '=' Exp . ';'

    ';'  shift, and go to state 174


State 171

  110 FuncFParamIndexList: FuncFParamIndexList '[' . Exp ']'

    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    Exp          go to state 175
    LVal         go to state 57
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 172

   42 Stmt: IF '(' Cond ')' . Stmt ElseChoice

    IF            shift, and go to state 132
    WHILE         shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 74
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 46 (ExpChoice)

    Block        go to state 139
    Stmt         go to state 176
    ExpChoice    go to state 142
    Exp          go to state 143
    LVal         go to state 144
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 173

   41 Stmt: WHILE '(' Cond ')' . Stmt

    IF            shift, and go to state 132
    WHILE         shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 74
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 46 (ExpChoice)

    Block        go to state 139
    Stmt         go to state 177
    ExpChoice    go to state 142
    Exp          go to state 143
    LVal         go to state 144
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 174

   45 Stmt: LVal '=' Exp ';' .

    $default  reduce using rule 45 (Stmt)


State 175

  110 FuncFParamIndexList: FuncFParamIndexList '[' Exp . ']'

    ']'  shift, and go to state 178


State 176

   42 Stmt: IF '(' Cond ')' Stmt . ElseChoice

    ELSE  shift, and go to state 179

    ELSE      [reduce using rule 49 (ElseChoice)]
    $default  reduce using rule 49 (ElseChoice)

    ElseChoice  go to state 180


State 177

   41 Stmt: WHILE '(' Cond ')' Stmt .

    $default  reduce using rule 41 (Stmt)


State 178

  110 FuncFParamIndexList: FuncFParamIndexList '[' Exp ']' .

    $default  reduce using rule 110 (FuncFParamIndexList)


State 179

   50 ElseChoice: ELSE . Stmt

    IF            shift, and go to state 132
    WHILE         shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    IDENT         shift, and go to state 45
    INT_CONST     shift, and go to state 46
    FLOAT_CONST   shift, and go to state 47
    CHAR_CONST    shift, and go to state 48
    STRING_CONST  shift, and go to state 49
    '{'           shift, and go to state 74
    '('           shift, and go to state 51
    '+'           shift, and go to state 52
    '-'           shift, and go to state 53
    '!'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 46 (ExpChoice)

    Block        go to state 139
    Stmt         go to state 181
    ExpChoice    go to state 142
    Exp          go to state 143
    LVal         go to state 144
    PrimaryExp   go to state 58
    IntNumber    go to state 59
    FloatNumber  go to state 60
    character    go to state 61
    String       go to state 62
    UnaryExp     go to state 63
    UnaryOp      go to state 64
    MulExp       go to state 65
    AddExp       go to state 108


State 180

   42 Stmt: IF '(' Cond ')' Stmt ElseChoice .

    $default  reduce using rule 42 (Stmt)


State 181

   50 ElseChoice: ELSE Stmt .

    $default  reduce using rule 50 (ElseChoice)
